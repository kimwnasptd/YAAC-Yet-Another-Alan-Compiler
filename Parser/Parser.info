-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.9 from Parser/Parser.y
-----------------------------------------------------------------------------

state 114 contains 1 shift/reduce conflicts.

terminal "." is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_basicParser -> Program                      (0)
	Program -> Func_Def                                (1)
	Func_Def -> var "(" FPar_List ")" ":" R_Type L_Def_List Comp_Stmt   (2)
	L_Def_List ->                                      (3)
	L_Def_List -> L_Def_List Local_Def                 (4)
	FPar_List ->                                       (5)
	FPar_List -> FPar_Def                              (6)
	FPar_List -> FPar_List "," FPar_Def                (7)
	FPar_Def -> var ":" reference Type                 (8)
	FPar_Def -> var ":" Type                           (9)
	Data_Type -> int                                   (10)
	Data_Type -> byte                                  (11)
	Type -> Data_Type                                  (12)
	Type -> Data_Type "[" "]"                          (13)
	R_Type -> Data_Type                                (14)
	R_Type -> proc                                     (15)
	Local_Def -> Func_Def                              (16)
	Local_Def -> Var_Def                               (17)
	Var_Def -> var ":" Data_Type ";"                   (18)
	Var_Def -> var ":" Data_Type "[" int_literal "]" ";"   (19)
	Stmt -> ";"                                        (20)
	Stmt -> L_Value "=" Expr ";"                       (21)
	Stmt -> Comp_Stmt                                  (22)
	Stmt -> Func_Call ";"                              (23)
	Stmt -> if "(" Cond ")" Stmt                       (24)
	Stmt -> if "(" Cond ")" Stmt else Stmt             (25)
	Stmt -> while "(" Cond ")" Stmt                    (26)
	Stmt -> return ";"                                 (27)
	Stmt -> return Expr ";"                            (28)
	Comp_Stmt -> "{" Stmt_List "}"                     (29)
	Stmt_List ->                                       (30)
	Stmt_List -> Stmt_List Stmt                        (31)
	Func_Call -> var "(" Expr_List ")"                 (32)
	Expr_List ->                                       (33)
	Expr_List -> Expr                                  (34)
	Expr_List -> Expr_List "," Expr                    (35)
	Expr -> int_literal                                (36)
	Expr -> char                                       (37)
	Expr -> L_Value                                    (38)
	Expr -> "(" Expr ")"                               (39)
	Expr -> Func_Call                                  (40)
	Expr -> "+" Expr                                   (41)
	Expr -> "-" Expr                                   (42)
	Expr -> Expr "+" Expr                              (43)
	Expr -> Expr "-" Expr                              (44)
	Expr -> Expr "*" Expr                              (45)
	Expr -> Expr "/" Expr                              (46)
	Expr -> Expr "%" Expr                              (47)
	L_Value -> var                                     (48)
	L_Value -> var "[" Expr "]"                        (49)
	L_Value -> string_literal                          (50)
	Cond -> true                                       (51)
	Cond -> false                                      (52)
	Cond -> "(" Cond ")"                               (53)
	Cond -> "!" Cond                                   (54)
	Cond -> Expr "==" Expr                             (55)
	Cond -> Expr "!=" Expr                             (56)
	Cond -> Expr "<" Expr                              (57)
	Cond -> Expr ">" Expr                              (58)
	Cond -> Expr "<=" Expr                             (59)
	Cond -> Expr ">=" Expr                             (60)
	Cond -> Cond "&" Cond                              (61)
	Cond -> Cond "|" Cond                              (62)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	byte           { TByte }
	else           { TElse }
	false          { TFalse }
	if             { TIf }
	int            { TInt }
	proc           { TProc }
	reference      { TReference }
	return         { TReturn }
	while          { TWhile }
	true           { TTrue }
	"."            { TPeriod }
	":"            { TColon }
	";"            { TSemiColon }
	"("            { TLeftParen }
	")"            { TRightParen }
	"{"            { TLeftBrace }
	"}"            { TRightBrace }
	","            { TComma }
	"["            { TLeftBrack }
	"]"            { TRightBrack }
	"="            { TAssign }
	"=="           { TComOp "==" }
	"!="           { TComOp "!=" }
	">="           { TComOp ">=" }
	"<="           { TComOp "<=" }
	">"            { TComOp ">" }
	"<"            { TComOp "<" }
	"+"            { TOp    "+" }
	"-"            { TOp    "-" }
	"*"            { TOp    "*" }
	"/"            { TOp    "/" }
	"%"            { TOp    "%" }
	"&"            { TOp    "&" }
	"|"            { TOp    "|" }
	"!"            { TOp    "!" }
	char           { TChar           $$ }
	int_literal    { TIntLiteral     $$ }
	var            { TName           $$ }
	string_literal { TStringLiteral  $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_basicParser rule  0
	Program         rule  1
	Func_Def        rule  2
	L_Def_List      rules 3, 4
	FPar_List       rules 5, 6, 7
	FPar_Def        rules 8, 9
	Data_Type       rules 10, 11
	Type            rules 12, 13
	R_Type          rules 14, 15
	Local_Def       rules 16, 17
	Var_Def         rules 18, 19
	Stmt            rules 20, 21, 22, 23, 24, 25, 26, 27, 28
	Comp_Stmt       rule  29
	Stmt_List       rules 30, 31
	Func_Call       rule  32
	Expr_List       rules 33, 34, 35
	Expr            rules 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47
	L_Value         rules 48, 49, 50
	Cond            rules 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	var            shift, and enter state 3

	Program        goto state 4
	Func_Def       goto state 2

State 1


	var            shift, and enter state 3

	Func_Def       goto state 2

State 2

	Program -> Func_Def .                               (rule 1)

	%eof           reduce using rule 1


State 3

	Func_Def -> var . "(" FPar_List ")" ":" R_Type L_Def_List Comp_Stmt    (rule 2)

	"("            shift, and enter state 5


State 4

	%start_basicParser -> Program .                     (rule 0)

	%eof           accept


State 5

	Func_Def -> var "(" . FPar_List ")" ":" R_Type L_Def_List Comp_Stmt    (rule 2)

	")"            reduce using rule 5
	","            reduce using rule 5
	var            shift, and enter state 8

	FPar_List      goto state 6
	FPar_Def       goto state 7

State 6

	Func_Def -> var "(" FPar_List . ")" ":" R_Type L_Def_List Comp_Stmt    (rule 2)
	FPar_List -> FPar_List . "," FPar_Def               (rule 7)

	")"            shift, and enter state 10
	","            shift, and enter state 11


State 7

	FPar_List -> FPar_Def .                             (rule 6)

	")"            reduce using rule 6
	","            reduce using rule 6


State 8

	FPar_Def -> var . ":" reference Type                (rule 8)
	FPar_Def -> var . ":" Type                          (rule 9)

	":"            shift, and enter state 9


State 9

	FPar_Def -> var ":" . reference Type                (rule 8)
	FPar_Def -> var ":" . Type                          (rule 9)

	byte           shift, and enter state 16
	int            shift, and enter state 17
	reference      shift, and enter state 18

	Data_Type      goto state 14
	Type           goto state 15

State 10

	Func_Def -> var "(" FPar_List ")" . ":" R_Type L_Def_List Comp_Stmt    (rule 2)

	":"            shift, and enter state 13


State 11

	FPar_List -> FPar_List "," . FPar_Def               (rule 7)

	var            shift, and enter state 8

	FPar_Def       goto state 12

State 12

	FPar_List -> FPar_List "," FPar_Def .               (rule 7)

	")"            reduce using rule 7
	","            reduce using rule 7


State 13

	Func_Def -> var "(" FPar_List ")" ":" . R_Type L_Def_List Comp_Stmt    (rule 2)

	byte           shift, and enter state 16
	int            shift, and enter state 17
	proc           shift, and enter state 23

	Data_Type      goto state 21
	R_Type         goto state 22

State 14

	Type -> Data_Type .                                 (rule 12)
	Type -> Data_Type . "[" "]"                         (rule 13)

	")"            reduce using rule 12
	","            reduce using rule 12
	"["            shift, and enter state 20


State 15

	FPar_Def -> var ":" Type .                          (rule 9)

	")"            reduce using rule 9
	","            reduce using rule 9


State 16

	Data_Type -> byte .                                 (rule 11)

	";"            reduce using rule 11
	")"            reduce using rule 11
	"{"            reduce using rule 11
	","            reduce using rule 11
	"["            reduce using rule 11
	var            reduce using rule 11


State 17

	Data_Type -> int .                                  (rule 10)

	";"            reduce using rule 10
	")"            reduce using rule 10
	"{"            reduce using rule 10
	","            reduce using rule 10
	"["            reduce using rule 10
	var            reduce using rule 10


State 18

	FPar_Def -> var ":" reference . Type                (rule 8)

	byte           shift, and enter state 16
	int            shift, and enter state 17

	Data_Type      goto state 14
	Type           goto state 19

State 19

	FPar_Def -> var ":" reference Type .                (rule 8)

	")"            reduce using rule 8
	","            reduce using rule 8


State 20

	Type -> Data_Type "[" . "]"                         (rule 13)

	"]"            shift, and enter state 25


State 21

	R_Type -> Data_Type .                               (rule 14)

	"{"            reduce using rule 14
	var            reduce using rule 14


State 22

	Func_Def -> var "(" FPar_List ")" ":" R_Type . L_Def_List Comp_Stmt    (rule 2)

	"{"            reduce using rule 3
	var            reduce using rule 3

	L_Def_List     goto state 24

State 23

	R_Type -> proc .                                    (rule 15)

	"{"            reduce using rule 15
	var            reduce using rule 15


State 24

	Func_Def -> var "(" FPar_List ")" ":" R_Type L_Def_List . Comp_Stmt    (rule 2)
	L_Def_List -> L_Def_List . Local_Def                (rule 4)

	"{"            shift, and enter state 30
	var            shift, and enter state 31

	Func_Def       goto state 26
	Local_Def      goto state 27
	Var_Def        goto state 28
	Comp_Stmt      goto state 29

State 25

	Type -> Data_Type "[" "]" .                         (rule 13)

	")"            reduce using rule 13
	","            reduce using rule 13


State 26

	Local_Def -> Func_Def .                             (rule 16)

	"{"            reduce using rule 16
	var            reduce using rule 16


State 27

	L_Def_List -> L_Def_List Local_Def .                (rule 4)

	"{"            reduce using rule 4
	var            reduce using rule 4


State 28

	Local_Def -> Var_Def .                              (rule 17)

	"{"            reduce using rule 17
	var            reduce using rule 17


State 29

	Func_Def -> var "(" FPar_List ")" ":" R_Type L_Def_List Comp_Stmt .    (rule 2)

	"{"            reduce using rule 2
	var            reduce using rule 2
	%eof           reduce using rule 2


State 30

	Comp_Stmt -> "{" . Stmt_List "}"                    (rule 29)

	if             reduce using rule 30
	return         reduce using rule 30
	while          reduce using rule 30
	";"            reduce using rule 30
	"{"            reduce using rule 30
	"}"            reduce using rule 30
	var            reduce using rule 30
	string_literal reduce using rule 30

	Stmt_List      goto state 33

State 31

	Func_Def -> var . "(" FPar_List ")" ":" R_Type L_Def_List Comp_Stmt    (rule 2)
	Var_Def -> var . ":" Data_Type ";"                  (rule 18)
	Var_Def -> var . ":" Data_Type "[" int_literal "]" ";"    (rule 19)

	":"            shift, and enter state 32
	"("            shift, and enter state 5


State 32

	Var_Def -> var ":" . Data_Type ";"                  (rule 18)
	Var_Def -> var ":" . Data_Type "[" int_literal "]" ";"    (rule 19)

	byte           shift, and enter state 16
	int            shift, and enter state 17

	Data_Type      goto state 45

State 33

	Comp_Stmt -> "{" Stmt_List . "}"                    (rule 29)
	Stmt_List -> Stmt_List . Stmt                       (rule 31)

	if             shift, and enter state 38
	return         shift, and enter state 39
	while          shift, and enter state 40
	";"            shift, and enter state 41
	"{"            shift, and enter state 30
	"}"            shift, and enter state 42
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Stmt           goto state 34
	Comp_Stmt      goto state 35
	Func_Call      goto state 36
	L_Value        goto state 37

State 34

	Stmt_List -> Stmt_List Stmt .                       (rule 31)

	if             reduce using rule 31
	return         reduce using rule 31
	while          reduce using rule 31
	";"            reduce using rule 31
	"{"            reduce using rule 31
	"}"            reduce using rule 31
	var            reduce using rule 31
	string_literal reduce using rule 31


State 35

	Stmt -> Comp_Stmt .                                 (rule 22)

	else           reduce using rule 22
	if             reduce using rule 22
	return         reduce using rule 22
	while          reduce using rule 22
	";"            reduce using rule 22
	"{"            reduce using rule 22
	"}"            reduce using rule 22
	var            reduce using rule 22
	string_literal reduce using rule 22


State 36

	Stmt -> Func_Call . ";"                             (rule 23)

	";"            shift, and enter state 62


State 37

	Stmt -> L_Value . "=" Expr ";"                      (rule 21)

	"="            shift, and enter state 61


State 38

	Stmt -> if . "(" Cond ")" Stmt                      (rule 24)
	Stmt -> if . "(" Cond ")" Stmt else Stmt            (rule 25)

	"("            shift, and enter state 60


State 39

	Stmt -> return . ";"                                (rule 27)
	Stmt -> return . Expr ";"                           (rule 28)

	";"            shift, and enter state 54
	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 52
	L_Value        goto state 53

State 40

	Stmt -> while . "(" Cond ")" Stmt                   (rule 26)

	"("            shift, and enter state 50


State 41

	Stmt -> ";" .                                       (rule 20)

	else           reduce using rule 20
	if             reduce using rule 20
	return         reduce using rule 20
	while          reduce using rule 20
	";"            reduce using rule 20
	"{"            reduce using rule 20
	"}"            reduce using rule 20
	var            reduce using rule 20
	string_literal reduce using rule 20


State 42

	Comp_Stmt -> "{" Stmt_List "}" .                    (rule 29)

	else           reduce using rule 29
	if             reduce using rule 29
	return         reduce using rule 29
	while          reduce using rule 29
	";"            reduce using rule 29
	"{"            reduce using rule 29
	"}"            reduce using rule 29
	var            reduce using rule 29
	string_literal reduce using rule 29
	%eof           reduce using rule 29


State 43

	Func_Call -> var . "(" Expr_List ")"                (rule 32)
	L_Value -> var .                                    (rule 48)
	L_Value -> var . "[" Expr "]"                       (rule 49)

	";"            reduce using rule 48
	"("            shift, and enter state 48
	")"            reduce using rule 48
	","            reduce using rule 48
	"["            shift, and enter state 49
	"]"            reduce using rule 48
	"="            reduce using rule 48
	"=="           reduce using rule 48
	"!="           reduce using rule 48
	">="           reduce using rule 48
	"<="           reduce using rule 48
	">"            reduce using rule 48
	"<"            reduce using rule 48
	"+"            reduce using rule 48
	"-"            reduce using rule 48
	"*"            reduce using rule 48
	"/"            reduce using rule 48
	"%"            reduce using rule 48
	"&"            reduce using rule 48
	"|"            reduce using rule 48


State 44

	L_Value -> string_literal .                         (rule 50)

	";"            reduce using rule 50
	")"            reduce using rule 50
	","            reduce using rule 50
	"]"            reduce using rule 50
	"="            reduce using rule 50
	"=="           reduce using rule 50
	"!="           reduce using rule 50
	">="           reduce using rule 50
	"<="           reduce using rule 50
	">"            reduce using rule 50
	"<"            reduce using rule 50
	"+"            reduce using rule 50
	"-"            reduce using rule 50
	"*"            reduce using rule 50
	"/"            reduce using rule 50
	"%"            reduce using rule 50
	"&"            reduce using rule 50
	"|"            reduce using rule 50


State 45

	Var_Def -> var ":" Data_Type . ";"                  (rule 18)
	Var_Def -> var ":" Data_Type . "[" int_literal "]" ";"    (rule 19)

	";"            shift, and enter state 46
	"["            shift, and enter state 47


State 46

	Var_Def -> var ":" Data_Type ";" .                  (rule 18)

	"{"            reduce using rule 18
	var            reduce using rule 18


State 47

	Var_Def -> var ":" Data_Type "[" . int_literal "]" ";"    (rule 19)

	int_literal    shift, and enter state 83


State 48

	Func_Call -> var "(" . Expr_List ")"                (rule 32)

	"("            shift, and enter state 55
	")"            reduce using rule 33
	","            reduce using rule 33
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr_List      goto state 81
	Expr           goto state 82
	L_Value        goto state 53

State 49

	L_Value -> var "[" . Expr "]"                       (rule 49)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 80
	L_Value        goto state 53

State 50

	Stmt -> while "(" . Cond ")" Stmt                   (rule 26)

	false          shift, and enter state 66
	true           shift, and enter state 67
	"("            shift, and enter state 68
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	"!"            shift, and enter state 69
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 64
	L_Value        goto state 53
	Cond           goto state 79

State 51

	Expr -> Func_Call .                                 (rule 40)

	";"            reduce using rule 40
	")"            reduce using rule 40
	","            reduce using rule 40
	"]"            reduce using rule 40
	"=="           reduce using rule 40
	"!="           reduce using rule 40
	">="           reduce using rule 40
	"<="           reduce using rule 40
	">"            reduce using rule 40
	"<"            reduce using rule 40
	"+"            reduce using rule 40
	"-"            reduce using rule 40
	"*"            reduce using rule 40
	"/"            reduce using rule 40
	"%"            reduce using rule 40
	"&"            reduce using rule 40
	"|"            reduce using rule 40


State 52

	Stmt -> return Expr . ";"                           (rule 28)
	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)

	";"            shift, and enter state 73
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78


State 53

	Expr -> L_Value .                                   (rule 38)

	";"            reduce using rule 38
	")"            reduce using rule 38
	","            reduce using rule 38
	"]"            reduce using rule 38
	"=="           reduce using rule 38
	"!="           reduce using rule 38
	">="           reduce using rule 38
	"<="           reduce using rule 38
	">"            reduce using rule 38
	"<"            reduce using rule 38
	"+"            reduce using rule 38
	"-"            reduce using rule 38
	"*"            reduce using rule 38
	"/"            reduce using rule 38
	"%"            reduce using rule 38
	"&"            reduce using rule 38
	"|"            reduce using rule 38


State 54

	Stmt -> return ";" .                                (rule 27)

	else           reduce using rule 27
	if             reduce using rule 27
	return         reduce using rule 27
	while          reduce using rule 27
	";"            reduce using rule 27
	"{"            reduce using rule 27
	"}"            reduce using rule 27
	var            reduce using rule 27
	string_literal reduce using rule 27


State 55

	Expr -> "(" . Expr ")"                              (rule 39)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 72
	L_Value        goto state 53

State 56

	Expr -> "+" . Expr                                  (rule 41)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 71
	L_Value        goto state 53

State 57

	Expr -> "-" . Expr                                  (rule 42)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 70
	L_Value        goto state 53

State 58

	Expr -> char .                                      (rule 37)

	";"            reduce using rule 37
	")"            reduce using rule 37
	","            reduce using rule 37
	"]"            reduce using rule 37
	"=="           reduce using rule 37
	"!="           reduce using rule 37
	">="           reduce using rule 37
	"<="           reduce using rule 37
	">"            reduce using rule 37
	"<"            reduce using rule 37
	"+"            reduce using rule 37
	"-"            reduce using rule 37
	"*"            reduce using rule 37
	"/"            reduce using rule 37
	"%"            reduce using rule 37
	"&"            reduce using rule 37
	"|"            reduce using rule 37


State 59

	Expr -> int_literal .                               (rule 36)

	";"            reduce using rule 36
	")"            reduce using rule 36
	","            reduce using rule 36
	"]"            reduce using rule 36
	"=="           reduce using rule 36
	"!="           reduce using rule 36
	">="           reduce using rule 36
	"<="           reduce using rule 36
	">"            reduce using rule 36
	"<"            reduce using rule 36
	"+"            reduce using rule 36
	"-"            reduce using rule 36
	"*"            reduce using rule 36
	"/"            reduce using rule 36
	"%"            reduce using rule 36
	"&"            reduce using rule 36
	"|"            reduce using rule 36


State 60

	Stmt -> if "(" . Cond ")" Stmt                      (rule 24)
	Stmt -> if "(" . Cond ")" Stmt else Stmt            (rule 25)

	false          shift, and enter state 66
	true           shift, and enter state 67
	"("            shift, and enter state 68
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	"!"            shift, and enter state 69
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 64
	L_Value        goto state 53
	Cond           goto state 65

State 61

	Stmt -> L_Value "=" . Expr ";"                      (rule 21)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 63
	L_Value        goto state 53

State 62

	Stmt -> Func_Call ";" .                             (rule 23)

	else           reduce using rule 23
	if             reduce using rule 23
	return         reduce using rule 23
	while          reduce using rule 23
	";"            reduce using rule 23
	"{"            reduce using rule 23
	"}"            reduce using rule 23
	var            reduce using rule 23
	string_literal reduce using rule 23


State 63

	Stmt -> L_Value "=" Expr . ";"                      (rule 21)
	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)

	";"            shift, and enter state 107
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78


State 64

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)
	Cond -> Expr . "==" Expr                            (rule 55)
	Cond -> Expr . "!=" Expr                            (rule 56)
	Cond -> Expr . "<" Expr                             (rule 57)
	Cond -> Expr . ">" Expr                             (rule 58)
	Cond -> Expr . "<=" Expr                            (rule 59)
	Cond -> Expr . ">=" Expr                            (rule 60)

	"=="           shift, and enter state 101
	"!="           shift, and enter state 102
	">="           shift, and enter state 103
	"<="           shift, and enter state 104
	">"            shift, and enter state 105
	"<"            shift, and enter state 106
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78


State 65

	Stmt -> if "(" Cond . ")" Stmt                      (rule 24)
	Stmt -> if "(" Cond . ")" Stmt else Stmt            (rule 25)
	Cond -> Cond . "&" Cond                             (rule 61)
	Cond -> Cond . "|" Cond                             (rule 62)

	")"            shift, and enter state 100
	"&"            shift, and enter state 89
	"|"            shift, and enter state 90


State 66

	Cond -> false .                                     (rule 52)

	")"            reduce using rule 52
	"&"            reduce using rule 52
	"|"            reduce using rule 52


State 67

	Cond -> true .                                      (rule 51)

	")"            reduce using rule 51
	"&"            reduce using rule 51
	"|"            reduce using rule 51


State 68

	Expr -> "(" . Expr ")"                              (rule 39)
	Cond -> "(" . Cond ")"                              (rule 53)

	false          shift, and enter state 66
	true           shift, and enter state 67
	"("            shift, and enter state 68
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	"!"            shift, and enter state 69
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 98
	L_Value        goto state 53
	Cond           goto state 99

State 69

	Cond -> "!" . Cond                                  (rule 54)

	false          shift, and enter state 66
	true           shift, and enter state 67
	"("            shift, and enter state 68
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	"!"            shift, and enter state 69
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 64
	L_Value        goto state 53
	Cond           goto state 97

State 70

	Expr -> "-" Expr .                                  (rule 42)
	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)

	";"            reduce using rule 42
	")"            reduce using rule 42
	","            reduce using rule 42
	"]"            reduce using rule 42
	"=="           reduce using rule 42
	"!="           reduce using rule 42
	">="           reduce using rule 42
	"<="           reduce using rule 42
	">"            reduce using rule 42
	"<"            reduce using rule 42
	"+"            reduce using rule 42
	"-"            reduce using rule 42
	"*"            reduce using rule 42
	"/"            reduce using rule 42
	"%"            reduce using rule 42
	"&"            reduce using rule 42
	"|"            reduce using rule 42


State 71

	Expr -> "+" Expr .                                  (rule 41)
	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)

	";"            reduce using rule 41
	")"            reduce using rule 41
	","            reduce using rule 41
	"]"            reduce using rule 41
	"=="           reduce using rule 41
	"!="           reduce using rule 41
	">="           reduce using rule 41
	"<="           reduce using rule 41
	">"            reduce using rule 41
	"<"            reduce using rule 41
	"+"            reduce using rule 41
	"-"            reduce using rule 41
	"*"            reduce using rule 41
	"/"            reduce using rule 41
	"%"            reduce using rule 41
	"&"            reduce using rule 41
	"|"            reduce using rule 41


State 72

	Expr -> "(" Expr . ")"                              (rule 39)
	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)

	")"            shift, and enter state 96
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78


State 73

	Stmt -> return Expr ";" .                           (rule 28)

	else           reduce using rule 28
	if             reduce using rule 28
	return         reduce using rule 28
	while          reduce using rule 28
	";"            reduce using rule 28
	"{"            reduce using rule 28
	"}"            reduce using rule 28
	var            reduce using rule 28
	string_literal reduce using rule 28


State 74

	Expr -> Expr "+" . Expr                             (rule 43)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 95
	L_Value        goto state 53

State 75

	Expr -> Expr "-" . Expr                             (rule 44)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 94
	L_Value        goto state 53

State 76

	Expr -> Expr "*" . Expr                             (rule 45)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 93
	L_Value        goto state 53

State 77

	Expr -> Expr "/" . Expr                             (rule 46)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 92
	L_Value        goto state 53

State 78

	Expr -> Expr "%" . Expr                             (rule 47)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 91
	L_Value        goto state 53

State 79

	Stmt -> while "(" Cond . ")" Stmt                   (rule 26)
	Cond -> Cond . "&" Cond                             (rule 61)
	Cond -> Cond . "|" Cond                             (rule 62)

	")"            shift, and enter state 88
	"&"            shift, and enter state 89
	"|"            shift, and enter state 90


State 80

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)
	L_Value -> var "[" Expr . "]"                       (rule 49)

	"]"            shift, and enter state 87
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78


State 81

	Func_Call -> var "(" Expr_List . ")"                (rule 32)
	Expr_List -> Expr_List . "," Expr                   (rule 35)

	")"            shift, and enter state 85
	","            shift, and enter state 86


State 82

	Expr_List -> Expr .                                 (rule 34)
	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)

	")"            reduce using rule 34
	","            reduce using rule 34
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78


State 83

	Var_Def -> var ":" Data_Type "[" int_literal . "]" ";"    (rule 19)

	"]"            shift, and enter state 84


State 84

	Var_Def -> var ":" Data_Type "[" int_literal "]" . ";"    (rule 19)

	";"            shift, and enter state 120


State 85

	Func_Call -> var "(" Expr_List ")" .                (rule 32)

	";"            reduce using rule 32
	")"            reduce using rule 32
	","            reduce using rule 32
	"]"            reduce using rule 32
	"=="           reduce using rule 32
	"!="           reduce using rule 32
	">="           reduce using rule 32
	"<="           reduce using rule 32
	">"            reduce using rule 32
	"<"            reduce using rule 32
	"+"            reduce using rule 32
	"-"            reduce using rule 32
	"*"            reduce using rule 32
	"/"            reduce using rule 32
	"%"            reduce using rule 32
	"&"            reduce using rule 32
	"|"            reduce using rule 32


State 86

	Expr_List -> Expr_List "," . Expr                   (rule 35)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 119
	L_Value        goto state 53

State 87

	L_Value -> var "[" Expr "]" .                       (rule 49)

	";"            reduce using rule 49
	")"            reduce using rule 49
	","            reduce using rule 49
	"]"            reduce using rule 49
	"="            reduce using rule 49
	"=="           reduce using rule 49
	"!="           reduce using rule 49
	">="           reduce using rule 49
	"<="           reduce using rule 49
	">"            reduce using rule 49
	"<"            reduce using rule 49
	"+"            reduce using rule 49
	"-"            reduce using rule 49
	"*"            reduce using rule 49
	"/"            reduce using rule 49
	"%"            reduce using rule 49
	"&"            reduce using rule 49
	"|"            reduce using rule 49


State 88

	Stmt -> while "(" Cond ")" . Stmt                   (rule 26)

	if             shift, and enter state 38
	return         shift, and enter state 39
	while          shift, and enter state 40
	";"            shift, and enter state 41
	"{"            shift, and enter state 30
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Stmt           goto state 118
	Comp_Stmt      goto state 35
	Func_Call      goto state 36
	L_Value        goto state 37

State 89

	Cond -> Cond "&" . Cond                             (rule 61)

	false          shift, and enter state 66
	true           shift, and enter state 67
	"("            shift, and enter state 68
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	"!"            shift, and enter state 69
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 64
	L_Value        goto state 53
	Cond           goto state 117

State 90

	Cond -> Cond "|" . Cond                             (rule 62)

	false          shift, and enter state 66
	true           shift, and enter state 67
	"("            shift, and enter state 68
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	"!"            shift, and enter state 69
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 64
	L_Value        goto state 53
	Cond           goto state 116

State 91

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)
	Expr -> Expr "%" Expr .                             (rule 47)

	";"            reduce using rule 47
	")"            reduce using rule 47
	","            reduce using rule 47
	"]"            reduce using rule 47
	"=="           reduce using rule 47
	"!="           reduce using rule 47
	">="           reduce using rule 47
	"<="           reduce using rule 47
	">"            reduce using rule 47
	"<"            reduce using rule 47
	"+"            reduce using rule 47
	"-"            reduce using rule 47
	"*"            reduce using rule 47
	"/"            reduce using rule 47
	"%"            reduce using rule 47
	"&"            reduce using rule 47
	"|"            reduce using rule 47


State 92

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr "/" Expr .                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)

	";"            reduce using rule 46
	")"            reduce using rule 46
	","            reduce using rule 46
	"]"            reduce using rule 46
	"=="           reduce using rule 46
	"!="           reduce using rule 46
	">="           reduce using rule 46
	"<="           reduce using rule 46
	">"            reduce using rule 46
	"<"            reduce using rule 46
	"+"            reduce using rule 46
	"-"            reduce using rule 46
	"*"            reduce using rule 46
	"/"            reduce using rule 46
	"%"            reduce using rule 46
	"&"            reduce using rule 46
	"|"            reduce using rule 46


State 93

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr "*" Expr .                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)

	";"            reduce using rule 45
	")"            reduce using rule 45
	","            reduce using rule 45
	"]"            reduce using rule 45
	"=="           reduce using rule 45
	"!="           reduce using rule 45
	">="           reduce using rule 45
	"<="           reduce using rule 45
	">"            reduce using rule 45
	"<"            reduce using rule 45
	"+"            reduce using rule 45
	"-"            reduce using rule 45
	"*"            reduce using rule 45
	"/"            reduce using rule 45
	"%"            reduce using rule 45
	"&"            reduce using rule 45
	"|"            reduce using rule 45


State 94

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr "-" Expr .                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)

	";"            reduce using rule 44
	")"            reduce using rule 44
	","            reduce using rule 44
	"]"            reduce using rule 44
	"=="           reduce using rule 44
	"!="           reduce using rule 44
	">="           reduce using rule 44
	"<="           reduce using rule 44
	">"            reduce using rule 44
	"<"            reduce using rule 44
	"+"            reduce using rule 44
	"-"            reduce using rule 44
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78
	"&"            reduce using rule 44
	"|"            reduce using rule 44


State 95

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr "+" Expr .                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)

	";"            reduce using rule 43
	")"            reduce using rule 43
	","            reduce using rule 43
	"]"            reduce using rule 43
	"=="           reduce using rule 43
	"!="           reduce using rule 43
	">="           reduce using rule 43
	"<="           reduce using rule 43
	">"            reduce using rule 43
	"<"            reduce using rule 43
	"+"            reduce using rule 43
	"-"            reduce using rule 43
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78
	"&"            reduce using rule 43
	"|"            reduce using rule 43


State 96

	Expr -> "(" Expr ")" .                              (rule 39)

	";"            reduce using rule 39
	")"            reduce using rule 39
	","            reduce using rule 39
	"]"            reduce using rule 39
	"=="           reduce using rule 39
	"!="           reduce using rule 39
	">="           reduce using rule 39
	"<="           reduce using rule 39
	">"            reduce using rule 39
	"<"            reduce using rule 39
	"+"            reduce using rule 39
	"-"            reduce using rule 39
	"*"            reduce using rule 39
	"/"            reduce using rule 39
	"%"            reduce using rule 39
	"&"            reduce using rule 39
	"|"            reduce using rule 39


State 97

	Cond -> "!" Cond .                                  (rule 54)
	Cond -> Cond . "&" Cond                             (rule 61)
	Cond -> Cond . "|" Cond                             (rule 62)

	")"            reduce using rule 54
	"&"            reduce using rule 54
	"|"            reduce using rule 54


State 98

	Expr -> "(" Expr . ")"                              (rule 39)
	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)
	Cond -> Expr . "==" Expr                            (rule 55)
	Cond -> Expr . "!=" Expr                            (rule 56)
	Cond -> Expr . "<" Expr                             (rule 57)
	Cond -> Expr . ">" Expr                             (rule 58)
	Cond -> Expr . "<=" Expr                            (rule 59)
	Cond -> Expr . ">=" Expr                            (rule 60)

	")"            shift, and enter state 96
	"=="           shift, and enter state 101
	"!="           shift, and enter state 102
	">="           shift, and enter state 103
	"<="           shift, and enter state 104
	">"            shift, and enter state 105
	"<"            shift, and enter state 106
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78


State 99

	Cond -> "(" Cond . ")"                              (rule 53)
	Cond -> Cond . "&" Cond                             (rule 61)
	Cond -> Cond . "|" Cond                             (rule 62)

	")"            shift, and enter state 115
	"&"            shift, and enter state 89
	"|"            shift, and enter state 90


State 100

	Stmt -> if "(" Cond ")" . Stmt                      (rule 24)
	Stmt -> if "(" Cond ")" . Stmt else Stmt            (rule 25)

	if             shift, and enter state 38
	return         shift, and enter state 39
	while          shift, and enter state 40
	";"            shift, and enter state 41
	"{"            shift, and enter state 30
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Stmt           goto state 114
	Comp_Stmt      goto state 35
	Func_Call      goto state 36
	L_Value        goto state 37

State 101

	Cond -> Expr "==" . Expr                            (rule 55)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 113
	L_Value        goto state 53

State 102

	Cond -> Expr "!=" . Expr                            (rule 56)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 112
	L_Value        goto state 53

State 103

	Cond -> Expr ">=" . Expr                            (rule 60)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 111
	L_Value        goto state 53

State 104

	Cond -> Expr "<=" . Expr                            (rule 59)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 110
	L_Value        goto state 53

State 105

	Cond -> Expr ">" . Expr                             (rule 58)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 109
	L_Value        goto state 53

State 106

	Cond -> Expr "<" . Expr                             (rule 57)

	"("            shift, and enter state 55
	"+"            shift, and enter state 56
	"-"            shift, and enter state 57
	char           shift, and enter state 58
	int_literal    shift, and enter state 59
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Func_Call      goto state 51
	Expr           goto state 108
	L_Value        goto state 53

State 107

	Stmt -> L_Value "=" Expr ";" .                      (rule 21)

	else           reduce using rule 21
	if             reduce using rule 21
	return         reduce using rule 21
	while          reduce using rule 21
	";"            reduce using rule 21
	"{"            reduce using rule 21
	"}"            reduce using rule 21
	var            reduce using rule 21
	string_literal reduce using rule 21


State 108

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)
	Cond -> Expr "<" Expr .                             (rule 57)

	")"            reduce using rule 57
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78
	"&"            reduce using rule 57
	"|"            reduce using rule 57


State 109

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)
	Cond -> Expr ">" Expr .                             (rule 58)

	")"            reduce using rule 58
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78
	"&"            reduce using rule 58
	"|"            reduce using rule 58


State 110

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)
	Cond -> Expr "<=" Expr .                            (rule 59)

	")"            reduce using rule 59
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78
	"&"            reduce using rule 59
	"|"            reduce using rule 59


State 111

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)
	Cond -> Expr ">=" Expr .                            (rule 60)

	")"            reduce using rule 60
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78
	"&"            reduce using rule 60
	"|"            reduce using rule 60


State 112

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)
	Cond -> Expr "!=" Expr .                            (rule 56)

	")"            reduce using rule 56
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78
	"&"            reduce using rule 56
	"|"            reduce using rule 56


State 113

	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)
	Cond -> Expr "==" Expr .                            (rule 55)

	")"            reduce using rule 55
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78
	"&"            reduce using rule 55
	"|"            reduce using rule 55


State 114

	Stmt -> if "(" Cond ")" Stmt .                      (rule 24)
	Stmt -> if "(" Cond ")" Stmt . else Stmt            (rule 25)

	else           shift, and enter state 121
			(reduce using rule 24)

	if             reduce using rule 24
	return         reduce using rule 24
	while          reduce using rule 24
	";"            reduce using rule 24
	"{"            reduce using rule 24
	"}"            reduce using rule 24
	var            reduce using rule 24
	string_literal reduce using rule 24


State 115

	Cond -> "(" Cond ")" .                              (rule 53)

	")"            reduce using rule 53
	"&"            reduce using rule 53
	"|"            reduce using rule 53


State 116

	Cond -> Cond . "&" Cond                             (rule 61)
	Cond -> Cond . "|" Cond                             (rule 62)
	Cond -> Cond "|" Cond .                             (rule 62)

	")"            reduce using rule 62
	"&"            shift, and enter state 89
	"|"            reduce using rule 62


State 117

	Cond -> Cond . "&" Cond                             (rule 61)
	Cond -> Cond "&" Cond .                             (rule 61)
	Cond -> Cond . "|" Cond                             (rule 62)

	")"            reduce using rule 61
	"&"            reduce using rule 61
	"|"            reduce using rule 61


State 118

	Stmt -> while "(" Cond ")" Stmt .                   (rule 26)

	else           reduce using rule 26
	if             reduce using rule 26
	return         reduce using rule 26
	while          reduce using rule 26
	";"            reduce using rule 26
	"{"            reduce using rule 26
	"}"            reduce using rule 26
	var            reduce using rule 26
	string_literal reduce using rule 26


State 119

	Expr_List -> Expr_List "," Expr .                   (rule 35)
	Expr -> Expr . "+" Expr                             (rule 43)
	Expr -> Expr . "-" Expr                             (rule 44)
	Expr -> Expr . "*" Expr                             (rule 45)
	Expr -> Expr . "/" Expr                             (rule 46)
	Expr -> Expr . "%" Expr                             (rule 47)

	")"            reduce using rule 35
	","            reduce using rule 35
	"+"            shift, and enter state 74
	"-"            shift, and enter state 75
	"*"            shift, and enter state 76
	"/"            shift, and enter state 77
	"%"            shift, and enter state 78


State 120

	Var_Def -> var ":" Data_Type "[" int_literal "]" ";" .    (rule 19)

	"{"            reduce using rule 19
	var            reduce using rule 19


State 121

	Stmt -> if "(" Cond ")" Stmt else . Stmt            (rule 25)

	if             shift, and enter state 38
	return         shift, and enter state 39
	while          shift, and enter state 40
	";"            shift, and enter state 41
	"{"            shift, and enter state 30
	var            shift, and enter state 43
	string_literal shift, and enter state 44

	Stmt           goto state 122
	Comp_Stmt      goto state 35
	Func_Call      goto state 36
	L_Value        goto state 37

State 122

	Stmt -> if "(" Cond ")" Stmt else Stmt .            (rule 25)

	else           reduce using rule 25
	if             reduce using rule 25
	return         reduce using rule 25
	while          reduce using rule 25
	";"            reduce using rule 25
	"{"            reduce using rule 25
	"}"            reduce using rule 25
	var            reduce using rule 25
	string_literal reduce using rule 25


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 63
Number of terminals: 39
Number of non-terminals: 19
Number of states: 123
